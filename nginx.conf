events {
    worker_connections 1024;
}

http {
    upstream jupyter-backend {
        server jupyterlab:8888;
    }
    
    upstream mcp-backend {
        server jupyter-mcp-server:4040;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=jupyter:10m rate=5r/s;

    server {
        listen 80;
        server_name localhost;
        
        # Redirect HTTP to HTTPS in production
        # return 301 https://$server_name$request_uri;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # MCP Server endpoint - rate limited
        location /mcp/ {
            limit_req zone=api burst=20 nodelay;
            
            # Remove internal details from errors
            proxy_intercept_errors on;
            error_page 500 502 503 504 /50x.html;
            
            proxy_pass http://mcp-backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for real-time features
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Jupyter Lab - more restrictive access
        location /jupyter/ {
            limit_req zone=jupyter burst=10 nodelay;
            
            # Optional: Add authentication here
            # auth_basic "Restricted Access";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://jupyter-backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Jupyter
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Increase timeouts for long-running operations
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }
        
        # Health check endpoint (public)
        location /health {
            proxy_pass http://mcp-backend/api/healthz;
            access_log off;
        }
        
        # Block direct access to internal services
        location ~ ^/(api|lab) {
            return 403;
        }
        
        # Serve error pages
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
    
    # HTTPS server (for production)
    server {
        listen 443 ssl http2;
        server_name localhost;
        
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
        ssl_prefer_server_ciphers off;
        
        # Same location blocks as above...
        # (configuration continues...)
    }
} 